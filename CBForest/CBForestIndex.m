//
//  CBForestIndex.m
//  CBForest
//
//  Created by Jens Alfke on 4/1/14.
//  Copyright (c) 2014 Couchbase. All rights reserved.
//

#import "CBForestIndex.h"
#import "CBForestPrivate.h"
#import "CBCollatable.h"
#import <forestdb.h>


id kCBForestIndexNoValue;


@implementation CBForestIndex


+ (void) initialize {
    if (!kCBForestIndexNoValue)
        kCBForestIndexNoValue = [[NSObject alloc] init];
}


- (BOOL) setKeys: (NSArray*)keys
          values: (NSArray*)values
     forDocument: (NSString*)docID
      atSequence: (uint64_t)docSequence
           error: (NSError**)outError
{
    // Remove any old key/value pairs previously generated by this document:
    NSData* docIDData = CBCreateCollatable(docID);
    NSData* seqData;
    if (![self getValue: &seqData meta: NULL forKey: docIDData error: outError])
        return NO;
    if (seqData) {
        NSArray* oldSeqs = DataToJSON(seqData, outError);
        for (NSNumber* seq in oldSeqs) {
            //NSLog(@"INDEX: Deleting seq %@ for doc %@", seq, docID);
            [self deleteSequence: seq.unsignedLongLongValue error: outError];
        }
    }

    // Add the key/value pairs:
    NSUInteger count = keys.count;
    if (count > 0) {
        NSMutableArray* seqs = [[NSMutableArray alloc] initWithCapacity: count];
        NSMutableData* keyData = [NSMutableData dataWithCapacity: 1024];
        for (NSUInteger i = 0; i < count; i++) {
            @autoreleasepool {
                keyData.length = 0;
                CBCollatableBeginArray(keyData);
                CBAddCollatable(keys[i], keyData);
                CBAddCollatable(docID, keyData);
                if (i > 0)
                    CBAddCollatable(@(i), keyData);
                CBCollatableEndArray(keyData);

                NSMutableArray* body = [NSMutableArray arrayWithObjects: keys[i], docID,
                                                                            @(docSequence), nil];
                id value = values[i];
                if (value != kCBForestIndexNoValue)
                    [body addObject: value];
                NSData* bodyData = JSONToData(body, NULL);
                if (!bodyData) {
                    NSLog(@"WARNING: Can't index non-JSON value %@", value);
                    continue;
                }

                CBForestSequence seq = [self setValue: bodyData
                                                 meta: nil
                                               forKey: keyData
                                                error: outError];
                if (seq == kCBForestNoSequence)
                    return NO;
                [seqs addObject: @(seq)];
                //NSLog(@"INDEX: Seq %llu = %@ --> %@", seq, keyData, body);
            }
        }
        seqData = JSONToData(seqs, NULL);
    } else {
        seqData = nil;
    }

    // Update the list of sequences used for this document:
    return [self setValue: seqData
                     meta: nil
                   forKey: docIDData
                    error: outError];
}


- (BOOL) queryStartKey: (id)startKey
            startDocID: (NSString*)startDocID
                endKey: (id)endKey
              endDocID: (NSString*)endDocID
               options: (const CBForestEnumerationOptions*)options
                 error: (NSError**)outError
                 block: (CBForestQueryCallbackBlock)block
{
    // Remember, the underlying keys are of the form [emittedKey, docID, serial#]
    NSMutableArray* realStartKey = [NSMutableArray arrayWithObjects: startKey, startDocID, nil];
    NSMutableArray* realEndKey = [NSMutableArray arrayWithObjects: endKey, endDocID, nil];
    NSMutableArray* maxKey = (options && options->descending) ? realStartKey : realEndKey;
    [maxKey addObject: @{}];

    return [self _enumerateValuesFromKey: CBCreateCollatable(realStartKey)
                                   toKey: CBCreateCollatable(realEndKey)
                                 options: options
                                   error: outError
                               withBlock: ^BOOL(fdb_doc *doc, uint64_t bodyOffset)
    {
        //NSLog(@"Query enumerated key=%@", BufToData(doc->key, doc->keylen));//TEMP
        if (!Check(fdb_get_byoffset(self.handle, doc, bodyOffset), outError)) {
            fdb_doc_free(doc);
            return false;
        }
        NSArray* body = BufToJSON((sized_buf){doc->body, doc->bodylen}, NULL);
        fdb_doc_free(doc);
        id key = body[0];
        if (options && !options->inclusiveEnd && endKey && [endKey isEqual: key]) {
            return false;
        }
        NSString* docID = body[1];
        uint64_t docSequence = [body[2] unsignedLongLongValue];
        id value = body.count > 3 ? body[3] : nil;
        BOOL stop = NO;
        block(key, value, docID, docSequence, &stop);
        return !stop;
    }];
}


@end
